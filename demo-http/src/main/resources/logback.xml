<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder charset="utf-8">
            <!-- encoder 可以指定字符集，对于中文输出有意义 -->
            <!-- %.-1level 只显示信息级别的首字母,%-5level 左对齐显示信息级别全称 -->
            <!-- 如需自定义关键字，用 %mdc{键名} 表示,程序中用MDC.put("键名","键值")设置，可动态设置 [%logger:%line]-->
            <Pattern>[%date{yyyy-MM-dd HH:mm:ss}] [%-5level] %logger %line --%mdc{client} [%X{TRACE_LOG_ID}] %msg%n</Pattern>
        </encoder>>
    </appender>

    <!-- <appender name="logInfoFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${logger.logRoot}/http/info.log</File>
        <encoder>
            <Pattern>[%date] [%-5level] %logger %line -1-%mdc{client} [%X{TRACE_LOG_ID}] %msg%n</Pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logger.logRoot}accounting/info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>512MB</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="logErrorFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${logger.logRoot}/http/error.log</File>
        <encoder>
            <Pattern>[%date] [%-5level] %logger %line -1-%mdc{client} [%X{TRACE_LOG_ID}] %msg%n</Pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logger.logRoot}accounting/error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>512MB</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <logger name="com.ibatis" level="${logger.logLevel}"/>
    <logger name="org.springframework" level="${logger.logLevel}"/>
    <logger name="java.sql.PreparedStatement" level="${logger.logLevel}"/>
    <logger name="org.springframework.web.servlet.DispatcherServlet" level="${logger.logLevel}"/>
    <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="${logger.logLevel}"/>
    <logger name="java.sql" level="${logger.logLevel}"/>
    <logger name="org.apache.commons" level="${logger.logLevel}"/>
    <logger name="java.sql.Statement" level="${logger.logLevel}"/>
    <logger name="org.springframework.web.context.support.XmlWebApplicationContext" level="${logger.logLevel}"/>
    <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="${logger.logLevel}"/>
    <logger name="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping" level="${logger.logLevel}"/>
    <logger name="java.sql.ResultSet" level="${logger.logLevel}"/>
    <logger name="java.sql.Connection" level="${logger.logLevel}"/>
    <logger name="com.ibatis.common.jdbc.ScriptRunner" level="${logger.logLevel}"/> -->

    <root level="DEBUG" name="com.xhh.demo">
        <appender-ref ref="stdout"/>
    </root>

    <!-- INFO 输出到 info.log -->
    <!-- <root level="${logger.logLevel}" name="com.xhh.demo">
        <appender-ref ref="${logger.info.appender}"/>
    </root> -->

    <!-- ERROR 输出到 error.log -->
    <!-- <root level="${logger.logLevel}" name="com.xhh.demo">
        <appender-ref ref="${logger.error.appender}"/>
    </root> -->

</configuration>